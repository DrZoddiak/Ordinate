emptyCommand {
	emptySubcommand {
	}
}
noArg {
	hook
}
stringArg string:arg {
	hook
}
stringArg string:arg1 string:arg2 {
	hook
}
optionalArg int:arg? {
	hook
}
optionalArgWithDefault int:arg?(100) {
	hook
}
boolArg boolean:arg {
	hook
}
intArgConstraint int<0,100>:num {
	hook
}
boolFlag --flag,-f {
	hook
}
baseWithPostArgSub string:message {
	sub {
		hook
		postArgument
	}
	subWithPostArgSub int:num {
		postArgument
		sub {
			hook
			postArgument
		}
	}
}
switchFlag boolean:--flag,-f {
	hook
}
defaultConstrainedFlag int<0,100>:--flag(4) {
	hook
}
consuming string...:arg {
	hook
}
optionalConsuming string...:arg? {
	hook
}
vararg boolean[]:bools {
	hook
}
optionalVararg int[]:nums? {
	hook
}
withContext string:arg {
	context = test
	hook
}
passAssert {
	assert = passingAsserter
	hook
}
failAssert {
	assert = failingAsserter
	hook
}